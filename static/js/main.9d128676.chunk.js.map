{"version":3,"sources":["components/Cell.js","hooks/useKeyboard.js","hooks/useInterval.js","hooks/useGame.js","components/Help.js","components/Stats.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["Square","isHighlight","isFood","className","highlight","useKeyboard","callback","codes","options","keydown","keyUp","cb","useRef","useEffect","current","downHandler","event","includes","code","upHandler","window","addEventListener","removeEventListener","useInterval","delay","id","setInterval","clearInterval","direction","gameState","getInitBoard","width","height","Array","fill","map","line","useGame","useState","board","state","setState","x","y","snake","setSnake","parseInt","Math","random","foodPosX","setFoodX","foodPosY","setFoodY","currDirection","setDirection","apples","setApples","newFoodPosX","useCallback","newFoodPosY","up","down","left","right","togglePause","prev","head","pop","floor","length","React","memo","Board","preventDefault","key","value","some","Cell","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9d128676.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = ({isHighlight, isFood}) => {\n  const highlight = () => {\n    let className = 'intern-square';\n    if(isHighlight) {\n      className += ' highlight';\n    }\n    if(isFood) {\n      className += ' food';\n    }\n    if(isHighlight && isFood) {\n      className = 'intern-square eat';\n    }\n    return className;\n  }\n  return (\n    <div className={isHighlight ? 'square highlight': 'square'}>\n      <div className={highlight()}/>\n    </div>\n  )\n}\n\nexport default Square;","import {useEffect, useRef } from 'react';\n\nexport const useKeyboard = (callback = () => null, codes=[], options={keydown: true, keyUp: false}) => {\n  const cb = useRef(callback);\n\n  useEffect(() => {\n    cb.current = callback;\n  }, [callback])\n\n  useEffect(() => {\n    const downHandler = (event) => {\n      if(codes.includes(event.code)) {\n        cb.current(event);\n      }\n    }\n    const upHandler = (event) => {\n      if(codes.includes(event)) {\n        cb.current(event);\n      }\n    }\n\n    if(options.keydown) window.addEventListener('keydown', downHandler);\n    if(options.keyUp) window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    }\n  }, [cb, codes, options.keyUp, options.keydown])\n}\n\nexport default useKeyboard;","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback = () => null, delay) => {\n  const cb = useRef(callback);\n\n  useEffect(() => {\n    cb.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const tick = () => cb.current();\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [cb, delay])\n}\n\nexport default useInterval;","import { useCallback, useEffect, useState } from 'react';\n\nimport useInterval from '../hooks/useInterval';\n\nconst direction =  {\n  UP : 0,\n  DOWN : 1,\n  LEFT : 2,\n  RIGHT : 3\n}\n\nconst gameState = {\n  RUNNING: 0,\n  PAUSED: 1,\n  GAMEOVER: 2\n}\n\nconst getInitBoard = (width, height) => {\n  return new Array(height).fill(new Array(width)).map(line => line.fill(0));\n}\n\nconst useGame = (width = 10, height = 20) => {\n  const [board] = useState(() => getInitBoard(width, height));\n  const [state, setState] = useState(gameState.PAUSED);\n  const [snake, setSnake] = useState([{x: 5, y:5}, {x: 5, y: 6}])\n  const [foodPosX, setFoodX] = useState(parseInt(Math.random() * width));\n  const [foodPosY, setFoodY] = useState(parseInt(Math.random() * height));\n  const [currDirection, setDirection] = useState(direction.UP);\n  const [apples, setApples] = useState(0);\n\n\n const newFoodPosX = useCallback(\n   () => {\n     setFoodX(parseInt(Math.random() * width))\n   },\n   [width],\n )\n\n const newFoodPosY = useCallback(\n  () => {\n    setFoodY(parseInt(Math.random() * height))\n  },\n  [height],\n)\n\n  const up = useCallback(() => {\n    setDirection(direction.UP);\n  }, []);\n\n  const down = useCallback(() => {\n    setDirection(direction.DOWN);\n  }, []);\n\n  const left = useCallback(() => {\n    setDirection(direction.LEFT);\n  }, [])\n\n  const right = useCallback(() => {\n    setDirection(direction.RIGHT);\n  }, [])\n\n  const togglePause = () => {\n    setState(prev => prev === gameState.PAUSED ? gameState.RUNNING : gameState.PAUSED);\n  }\n\n  useInterval(() => {\n    if(state === gameState.PAUSED) return;\n    const head = snake[0];\n    snake.pop();\n    let x = head.x;\n    let y = head.y;\n    switch(currDirection) {\n      case direction.UP:\n        y = head.y === 0 ? height - 1 : head.y -1;\n        break;\n       case direction.DOWN:\n         y = y === height - 1 ? 0 : y + 1\n         break;\n       case direction.LEFT:\n         x = x === 0 ? width - 1 : x - 1;\n         break;\n       case direction.RIGHT:\n         x = x === width - 1 ? 0 : x + 1;\n         break;\n       default:\n         break;\n    }\n    setSnake([{\n      x,\n      y\n    },...snake])\n  }, Math.floor((1000 * 22) / 60))\n\n  \n\n  /**\n   * Food Position\n   */\n  useEffect(() => {\n    //ate food\n    if(snake[0].x === foodPosX && snake[0].y === foodPosY) {\n      switch(currDirection) {\n        case direction.UP:\n          setSnake([...snake,{\n            x: snake[snake.length - 1].x,\n            y: snake[snake.length - 1].y - 1\n          }  ])\n          break;\n         case direction.DOWN:\n          setSnake([...snake,{\n            x: snake[snake.length - 1].x,\n            y: snake[snake.length - 1].y + 1\n          }  ])\n           break;\n         case direction.LEFT:\n          setSnake([...snake,{\n            x: snake[snake.length - 1].x - 1,\n            y: snake[snake.length - 1].y \n          }  ])\n           break;\n         case direction.RIGHT:\n          setSnake([...snake,{\n            x: snake[snake.length - 1].x + 1,\n            y: snake[snake.length - 1].y \n          }  ])\n           break;\n         default:\n           break;\n      }\n      newFoodPosX();\n      newFoodPosY();\n      setApples(prev => prev + 1)\n\n    }\n  }, [currDirection, foodPosX, foodPosY, newFoodPosX, newFoodPosY, snake])\n\n  \n  return {\n    board,\n    snake,\n    foodPosX,\n    foodPosY,\n    up,\n    down,\n    left,\n    right,\n    apples,\n    togglePause\n  };\n}\n\nexport default useGame;","import React from 'react';\n\nconst Help =  () => {\n  return (\n    <div className=\"help\">\n      <div className=\"description\">\n        <div>&uarr;</div>\n        <div>&larr;  &rarr;</div>\n        <div>&darr;</div>\n        <div>space</div>\n      </div>\n      <div className=\"instructions\">\n        <div>Up</div>\n        <div>Left/Right</div>\n        <div>Down</div>\n        <div>Play/Pause Game</div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Help);","import React from 'react';\n\nconst Stats = ({apples}) => {\n  return (\n    <>\n      <div className=\"scores border\">\n        <div className=\"score\">\n          <div>Apples:</div>\n        </div>\n        <div className=\"values\">\n          <div>{apples}</div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(Stats);","import React from 'react';\n\nimport Cell from './Cell';\nimport useKeyboard from '../hooks/useKeyboard';\nimport useGame from '../hooks/useGame';\nimport Help from './Help';\nimport Stats from './Stats';\n\n\nconst Board = () => {\n  const { \n    board,\n    foodPosX,\n    foodPosY,\n    snake,\n    up,\n    down,\n    right,\n    left,\n    apples,\n    togglePause\n  } = useGame();\n  \n\n  useKeyboard((event) => {\n    switch(event.code) {\n      case 'ArrowUp':\n        up();\n        break;\n      case 'ArrowDown':\n        down();\n        break;\n      case 'ArrowRight':\n        right();\n        break;\n      case 'ArrowLeft':\n        left();\n        break;\n      case 'Space':\n        togglePause();\n        break;\n      default:\n        break;\n    }\n    event.preventDefault();\n  }, [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"Space\"]);\n\n\n  return (\n    <div className=\"board\">\n      <Help/>\n      <div className=\"lines border\">\n        {board.map((line, y) => \n          <div key={y} className=\"block-line\">\n            {\n              line.map((value, x) => {\n                // const isHighlight = x === posX && y === posY;\n                const isHighlight = snake.some((value) => value.x === x && value.y === y);\n                const isFood = x === foodPosX && y === foodPosY;\n                return <Cell isHighlight={isHighlight} key={`${x}-${y}`} isFood={isFood}/>\n              })\n            }\n          </div>\n        )}\n      </div>\n      <div className=\"stats\">\n        <Stats apples={apples}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Board;","import React from 'react';\nimport './App.css';\nimport Board from './components/Board';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}